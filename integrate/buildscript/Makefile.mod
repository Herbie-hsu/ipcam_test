#This file is automatically generated

crosstool:=$(crosstool-4.5.2)
packagetool:=$(image-tool)
bootloader:=u-boot-2011-09
kernel:=linux-2.6.35.12
filesystem-bs:=busybox-1.18.5
filesystem:=rootfs
filesystem-rescue:=rootfs-rescue
crosstool-4.5.2=$(PRJ_DIR)/toolchain/crosstool-4.5.2

image-tool=$(PRJ_DIR)/toolchain/image-tool

board-info=$(PRJ_DIR)/board-info

u-boot-2011-09:
	if [ -d $(PRJ_DIR)/bootloader/u-boot-2011-09/image ]; then \
		cp -av $(PRJ_DIR)/bootloader/u-boot-2011-09/image/* $(DIST_DIR); \
	fi
u-boot-2011-09-clean:

linux-2.6.35.12:
	$(MAKE) -C $(PRJ_DIR)/kernel/linux-2.6.35.12 all OBJ_DIR=$(NORMAL_KERNEL_DIR)/src COMPILE_RESCUE=no
	$(MAKE) -C $(PRJ_DIR)/kernel/linux-2.6.35.12 install INSTALL_DIR=$(PRJ_DIR)/kernel/linux-2.6.35.12/image OBJ_DIR=$(NORMAL_KERNEL_DIR)/src COMPILE_RESCUE=no
	if [ -d $(PRJ_DIR)/kernel/linux-2.6.35.12/image ]; then \
		cp -av $(PRJ_DIR)/kernel/linux-2.6.35.12/image/* $(DIST_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	$(MAKE) -C $(PRJ_DIR)/kernel/linux-2.6.35.12 all OBJ_DIR=$(RESCUE_KERNEL_DIR)/src COMPILE_RESCUE=yes
endif
linux-2.6.35.12-clean:
	$(MAKE) -C $(PRJ_DIR)/kernel/linux-2.6.35.12 clean OBJ_DIR=$(NORMAL_KERNEL_DIR)/src COMPILE_RESCUE=no
	$(MAKE) -C $(PRJ_DIR)/kernel/linux-2.6.35.12 distclean OBJ_DIR=$(NORMAL_KERNEL_DIR)/src COMPILE_RESCUE=no
	rm -rf $(PRJ_DIR)/kernel/linux-2.6.35.12/image
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	$(MAKE) -C $(PRJ_DIR)/kernel/linux-2.6.35.12 clean OBJ_DIR=$(RESCUE_KERNEL_DIR)/src COMPILE_RESCUE=yes
	$(MAKE) -C $(PRJ_DIR)/kernel/linux-2.6.35.12 distclean OBJ_DIR=$(RESCUE_KERNEL_DIR)/src COMPILE_RESCUE=yes
	rm -rf $(PRJ_DIR)/kernel/linux-2.6.35.12/rescue_image
endif

busybox-1.18.5:
	if [ -d $(PRJ_DIR)/filesystem/busybox-1.18.5/rootfs ]; then \
		cp -av $(PRJ_DIR)/filesystem/busybox-1.18.5/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/filesystem/busybox-1.18.5/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/filesystem/busybox-1.18.5/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
busybox-1.18.5-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

rootfs:
	$(MAKE) -C $(PRJ_DIR)/filesystem/rootfs all
	$(MAKE) -C $(PRJ_DIR)/filesystem/rootfs install
rootfs-clean:
	$(MAKE) -C $(PRJ_DIR)/filesystem/rootfs clean
	$(MAKE) -C $(PRJ_DIR)/filesystem/rootfs distclean

rootfs-rescue:
	$(MAKE) -C $(PRJ_DIR)/filesystem/rootfs-rescue all
	$(MAKE) -C $(PRJ_DIR)/filesystem/rootfs-rescue install
rootfs-rescue-clean:
	$(MAKE) -C $(PRJ_DIR)/filesystem/rootfs-rescue clean
	$(MAKE) -C $(PRJ_DIR)/filesystem/rootfs-rescue distclean

##############################
###those are driver modules###
##############################

ifeq ($(MODULE_ONLY), yes)
ahbdma:
else
ahbdma: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/ahbdma/custom_install ]; then \
		$(PRJ_DIR)/driver/ahbdma/custom_install install $(PRJ_DIR)/driver/ahbdma/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/ahbdma/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/ahbdma/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
ahbdma-clean:
else
ahbdma-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/ahbdma/custom_install ]; then \
		$(PRJ_DIR)/driver/ahbdma/custom_install uninstall $(PRJ_DIR)/driver/ahbdma/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/ahbdma/custom_install ]; then \
		$(PRJ_DIR)/driver/ahbdma/custom_install uninstall $(PRJ_DIR)/driver/ahbdma/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
audio:
else
audio: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/audio/custom_install ]; then \
		$(PRJ_DIR)/driver/audio/custom_install install $(PRJ_DIR)/driver/audio/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/audio/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/audio/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/audio/custom_install ]; then \
		$(PRJ_DIR)/driver/audio/custom_install install $(PRJ_DIR)/driver/audio/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/audio/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/audio/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
audio-clean:
else
audio-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/audio/custom_install ]; then \
		$(PRJ_DIR)/driver/audio/custom_install uninstall $(PRJ_DIR)/driver/audio/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/audio/custom_install ]; then \
		$(PRJ_DIR)/driver/audio/custom_install uninstall $(PRJ_DIR)/driver/audio/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
bus-mon:
else
bus-mon: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/bus-mon/custom_install ]; then \
		$(PRJ_DIR)/driver/bus-mon/custom_install install $(PRJ_DIR)/driver/bus-mon/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/bus-mon/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/bus-mon/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
bus-mon-clean:
else
bus-mon-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/bus-mon/custom_install ]; then \
		$(PRJ_DIR)/driver/bus-mon/custom_install uninstall $(PRJ_DIR)/driver/bus-mon/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/bus-mon/custom_install ]; then \
		$(PRJ_DIR)/driver/bus-mon/custom_install uninstall $(PRJ_DIR)/driver/bus-mon/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
spi:
else
spi: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/spi/custom_install ]; then \
		$(PRJ_DIR)/driver/spi/custom_install install $(PRJ_DIR)/driver/spi/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/spi/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/spi/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/spi/custom_install ]; then \
		$(PRJ_DIR)/driver/spi/custom_install install $(PRJ_DIR)/driver/spi/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/spi/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/spi/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
spi-clean:
else
spi-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/spi/custom_install ]; then \
		$(PRJ_DIR)/driver/spi/custom_install uninstall $(PRJ_DIR)/driver/spi/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/spi/custom_install ]; then \
		$(PRJ_DIR)/driver/spi/custom_install uninstall $(PRJ_DIR)/driver/spi/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
crypto:
else
crypto: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/crypto/custom_install ]; then \
		$(PRJ_DIR)/driver/crypto/custom_install install $(PRJ_DIR)/driver/crypto/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/crypto/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/crypto/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/crypto/custom_install ]; then \
		$(PRJ_DIR)/driver/crypto/custom_install install $(PRJ_DIR)/driver/crypto/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/crypto/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/crypto/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
crypto-clean:
else
crypto-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/crypto/custom_install ]; then \
		$(PRJ_DIR)/driver/crypto/custom_install uninstall $(PRJ_DIR)/driver/crypto/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/crypto/custom_install ]; then \
		$(PRJ_DIR)/driver/crypto/custom_install uninstall $(PRJ_DIR)/driver/crypto/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
gpio:
else
gpio: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/gpio/custom_install ]; then \
		$(PRJ_DIR)/driver/gpio/custom_install install $(PRJ_DIR)/driver/gpio/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/gpio/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/gpio/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/gpio/custom_install ]; then \
		$(PRJ_DIR)/driver/gpio/custom_install install $(PRJ_DIR)/driver/gpio/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/gpio/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/gpio/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
gpio-clean:
else
gpio-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/gpio/custom_install ]; then \
		$(PRJ_DIR)/driver/gpio/custom_install uninstall $(PRJ_DIR)/driver/gpio/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/gpio/custom_install ]; then \
		$(PRJ_DIR)/driver/gpio/custom_install uninstall $(PRJ_DIR)/driver/gpio/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
pwm:
else
pwm: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/pwm/custom_install ]; then \
		$(PRJ_DIR)/driver/pwm/custom_install install $(PRJ_DIR)/driver/pwm/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/pwm/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/pwm/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/pwm/custom_install ]; then \
		$(PRJ_DIR)/driver/pwm/custom_install install $(PRJ_DIR)/driver/pwm/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/pwm/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/pwm/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
pwm-clean:
else
pwm-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/pwm/custom_install ]; then \
		$(PRJ_DIR)/driver/pwm/custom_install uninstall $(PRJ_DIR)/driver/pwm/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/pwm/custom_install ]; then \
		$(PRJ_DIR)/driver/pwm/custom_install uninstall $(PRJ_DIR)/driver/pwm/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
rtc:
else
rtc: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/rtc/custom_install ]; then \
		$(PRJ_DIR)/driver/rtc/custom_install install $(PRJ_DIR)/driver/rtc/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/rtc/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/rtc/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/rtc/custom_install ]; then \
		$(PRJ_DIR)/driver/rtc/custom_install install $(PRJ_DIR)/driver/rtc/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/rtc/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/rtc/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
rtc-clean:
else
rtc-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/rtc/custom_install ]; then \
		$(PRJ_DIR)/driver/rtc/custom_install uninstall $(PRJ_DIR)/driver/rtc/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/rtc/custom_install ]; then \
		$(PRJ_DIR)/driver/rtc/custom_install uninstall $(PRJ_DIR)/driver/rtc/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
timer:
else
timer: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/timer/custom_install ]; then \
		$(PRJ_DIR)/driver/timer/custom_install install $(PRJ_DIR)/driver/timer/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/timer/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/timer/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/timer/custom_install ]; then \
		$(PRJ_DIR)/driver/timer/custom_install install $(PRJ_DIR)/driver/timer/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/timer/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/timer/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
timer-clean:
else
timer-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/timer/custom_install ]; then \
		$(PRJ_DIR)/driver/timer/custom_install uninstall $(PRJ_DIR)/driver/timer/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/timer/custom_install ]; then \
		$(PRJ_DIR)/driver/timer/custom_install uninstall $(PRJ_DIR)/driver/timer/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
tv:
else
tv: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/tv/custom_install ]; then \
		$(PRJ_DIR)/driver/tv/custom_install install $(PRJ_DIR)/driver/tv/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/tv/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/tv/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/tv/custom_install ]; then \
		$(PRJ_DIR)/driver/tv/custom_install install $(PRJ_DIR)/driver/tv/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/tv/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/tv/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
tv-clean:
else
tv-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/tv/custom_install ]; then \
		$(PRJ_DIR)/driver/tv/custom_install uninstall $(PRJ_DIR)/driver/tv/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/tv/custom_install ]; then \
		$(PRJ_DIR)/driver/tv/custom_install uninstall $(PRJ_DIR)/driver/tv/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
usb-wifi:
else
usb-wifi: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/usb-wifi/custom_install ]; then \
		$(PRJ_DIR)/driver/usb-wifi/custom_install install $(PRJ_DIR)/driver/usb-wifi/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/usb-wifi/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/usb-wifi/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/usb-wifi/custom_install ]; then \
		$(PRJ_DIR)/driver/usb-wifi/custom_install install $(PRJ_DIR)/driver/usb-wifi/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/usb-wifi/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/usb-wifi/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
usb-wifi-clean:
else
usb-wifi-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/usb-wifi/custom_install ]; then \
		$(PRJ_DIR)/driver/usb-wifi/custom_install uninstall $(PRJ_DIR)/driver/usb-wifi/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/usb-wifi/custom_install ]; then \
		$(PRJ_DIR)/driver/usb-wifi/custom_install uninstall $(PRJ_DIR)/driver/usb-wifi/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
usb-storage:
else
usb-storage: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/usb-storage/custom_install ]; then \
		$(PRJ_DIR)/driver/usb-storage/custom_install install $(PRJ_DIR)/driver/usb-storage/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/usb-storage/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/usb-storage/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
usb-storage-clean:
else
usb-storage-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/usb-storage/custom_install ]; then \
		$(PRJ_DIR)/driver/usb-storage/custom_install uninstall $(PRJ_DIR)/driver/usb-storage/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/usb-storage/custom_install ]; then \
		$(PRJ_DIR)/driver/usb-storage/custom_install uninstall $(PRJ_DIR)/driver/usb-storage/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
usb-3g:
else
usb-3g: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/usb-3g/custom_install ]; then \
		$(PRJ_DIR)/driver/usb-3g/custom_install install $(PRJ_DIR)/driver/usb-3g/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/usb-3g/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/usb-3g/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
usb-3g-clean:
else
usb-3g-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/usb-3g/custom_install ]; then \
		$(PRJ_DIR)/driver/usb-3g/custom_install uninstall $(PRJ_DIR)/driver/usb-3g/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/usb-3g/custom_install ]; then \
		$(PRJ_DIR)/driver/usb-3g/custom_install uninstall $(PRJ_DIR)/driver/usb-3g/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
video:
else
video: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/video/custom_install ]; then \
		$(PRJ_DIR)/driver/video/custom_install install $(PRJ_DIR)/driver/video/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/video/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/video/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/video/custom_install ]; then \
		$(PRJ_DIR)/driver/video/custom_install install $(PRJ_DIR)/driver/video/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/video/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/video/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
video-clean:
else
video-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/video/custom_install ]; then \
		$(PRJ_DIR)/driver/video/custom_install uninstall $(PRJ_DIR)/driver/video/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/video/custom_install ]; then \
		$(PRJ_DIR)/driver/video/custom_install uninstall $(PRJ_DIR)/driver/video/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
wdt:
else
wdt: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/wdt/custom_install ]; then \
		$(PRJ_DIR)/driver/wdt/custom_install install $(PRJ_DIR)/driver/wdt/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/wdt/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/wdt/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/wdt/custom_install ]; then \
		$(PRJ_DIR)/driver/wdt/custom_install install $(PRJ_DIR)/driver/wdt/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/wdt/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/wdt/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
wdt-clean:
else
wdt-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/wdt/custom_install ]; then \
		$(PRJ_DIR)/driver/wdt/custom_install uninstall $(PRJ_DIR)/driver/wdt/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/wdt/custom_install ]; then \
		$(PRJ_DIR)/driver/wdt/custom_install uninstall $(PRJ_DIR)/driver/wdt/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
sdc:
else
sdc: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/sdc/custom_install ]; then \
		$(PRJ_DIR)/driver/sdc/custom_install install $(PRJ_DIR)/driver/sdc/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/sdc/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/sdc/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/sdc/custom_install ]; then \
		$(PRJ_DIR)/driver/sdc/custom_install install $(PRJ_DIR)/driver/sdc/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/sdc/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/sdc/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
sdc-clean:
else
sdc-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/sdc/custom_install ]; then \
		$(PRJ_DIR)/driver/sdc/custom_install uninstall $(PRJ_DIR)/driver/sdc/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/sdc/custom_install ]; then \
		$(PRJ_DIR)/driver/sdc/custom_install uninstall $(PRJ_DIR)/driver/sdc/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
nvram_driver:
else
nvram_driver: linux-2.6.35.12  crypto
endif
	if [ -f $(PRJ_DIR)/driver/nvram/custom_install ]; then \
		$(PRJ_DIR)/driver/nvram/custom_install install $(PRJ_DIR)/driver/nvram/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/nvram/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/nvram/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/nvram/custom_install ]; then \
		$(PRJ_DIR)/driver/nvram/custom_install install $(PRJ_DIR)/driver/nvram/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/nvram/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/nvram/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
nvram_driver-clean:
else
nvram_driver-clean: linux-2.6.35.12-clean crypto-clean 
endif
	if [ -f $(PRJ_DIR)/driver/nvram/custom_install ]; then \
		$(PRJ_DIR)/driver/nvram/custom_install uninstall $(PRJ_DIR)/driver/nvram/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/nvram/custom_install ]; then \
		$(PRJ_DIR)/driver/nvram/custom_install uninstall $(PRJ_DIR)/driver/nvram/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

ifeq ($(MODULE_ONLY), yes)
mcu_module:
else
mcu_module: linux-2.6.35.12
endif
	if [ -f $(PRJ_DIR)/driver/mcu/custom_install ]; then \
		$(PRJ_DIR)/driver/mcu/custom_install install $(PRJ_DIR)/driver/mcu/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/driver/mcu/rootfs ]; then \
		cp -av $(PRJ_DIR)/driver/mcu/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/mcu/custom_install ]; then \
		$(PRJ_DIR)/driver/mcu/custom_install install $(PRJ_DIR)/driver/mcu/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	if [ -d $(PRJ_DIR)/driver/mcu/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/driver/mcu/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
mcu_module-clean:
else
mcu_module-clean: linux-2.6.35.12-clean
endif
	if [ -f $(PRJ_DIR)/driver/mcu/custom_install ]; then \
		$(PRJ_DIR)/driver/mcu/custom_install uninstall $(PRJ_DIR)/driver/mcu/rootfs $(AUTOCONF_DIR) normal; \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/driver/mcu/custom_install ]; then \
		$(PRJ_DIR)/driver/mcu/custom_install uninstall $(PRJ_DIR)/driver/mcu/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
endif

##############################
###those are app modules######
##############################

ifeq ($(MODULE_ONLY), yes)
example:
else
example: linux-2.6.35.12  middleware_video  middleware_rate_ctl  middleware_audio  middleware_gpio  middleware_common
endif
	$(MAKE) -C $(PRJ_DIR)/app/example all KERNEL_DIR=$(NORMAL_KERNEL_DIR) COMPILE_RESCUE=no
	$(MAKE) -C $(PRJ_DIR)/app/example install INSTALL_DIR=$(PRJ_DIR)/app/example/rootfs KERNEL_DIR=$(NORMAL_KERNEL_DIR) COMPILE_RESCUE=no
	if [ -f $(PRJ_DIR)/app/example/custom_install ]; then \
		$(PRJ_DIR)/app/example/custom_install install $(PRJ_DIR)/app/example/rootfs $(AUTOCONF_DIR) normal; \
	fi
	if [ -d $(PRJ_DIR)/app/example/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/example/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
example-clean:
else
example-clean: linux-2.6.35.12-clean middleware_video-clean middleware_rate_ctl-clean middleware_audio-clean middleware_gpio-clean middleware_common-clean 
endif
	if [ -f $(PRJ_DIR)/app/example/custom_install ]; then \
		$(PRJ_DIR)/app/example/custom_install uninstall $(PRJ_DIR)/app/example/rootfs $(AUTOCONF_DIR) normal; \
	fi
	$(MAKE) -C $(PRJ_DIR)/app/example clean
	$(MAKE) -C $(PRJ_DIR)/app/example distclean
	rm -rf $(PRJ_DIR)/app/example/rootfs
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -f $(PRJ_DIR)/app/example/custom_install ]; then \
		$(PRJ_DIR)/app/example/custom_install uninstall $(PRJ_DIR)/app/example/rootfs-rescue $(AUTOCONF_DIR) rescue; \
	fi
	rm -rf $(PRJ_DIR)/app/example/rootfs-rescue
endif

##################################
###those are middleware modules###
##################################

middleware_common:
	if [ -d $(PRJ_DIR)/middleware/common/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/common/rootfs/* $(FS_DIR); \
	fi
	if [ -d $(PRJ_DIR)/middleware/common/middleware ]; then \
		cp -av $(PRJ_DIR)/middleware/common/middleware/* $(MIDDLEWARE_INS_DIR); \
	fi
middleware_common-clean:

middleware_audio:
	if [ -d $(PRJ_DIR)/middleware/audio/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/audio/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/audio/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/audio/rootfs/* $(RESCUE_FS_DIR); \
	fi
endif
	if [ -d $(PRJ_DIR)/middleware/audio/middleware ]; then \
		cp -av $(PRJ_DIR)/middleware/audio/middleware/* $(MIDDLEWARE_INS_DIR); \
	fi
middleware_audio-clean:

ifeq ($(MODULE_ONLY), yes)
middleware_video:
else
middleware_video: middleware_snxconf
endif
	if [ -d $(PRJ_DIR)/middleware/video/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/video/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/video/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/video/rootfs/* $(RESCUE_FS_DIR); \
	fi
endif
	if [ -d $(PRJ_DIR)/middleware/video/middleware ]; then \
		cp -av $(PRJ_DIR)/middleware/video/middleware/* $(MIDDLEWARE_INS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
middleware_video-clean:
else
middleware_video-clean: middleware_snxconf-clean
endif

middleware_snxconf:
	if [ -d $(PRJ_DIR)/middleware/snxconf/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/snxconf/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/snxconf/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/snxconf/rootfs/* $(RESCUE_FS_DIR); \
	fi
endif
	if [ -d $(PRJ_DIR)/middleware/snxconf/middleware ]; then \
		cp -av $(PRJ_DIR)/middleware/snxconf/middleware/* $(MIDDLEWARE_INS_DIR); \
	fi
middleware_snxconf-clean:

ifeq ($(MODULE_ONLY), yes)
middleware_rate_ctl:
else
middleware_rate_ctl: middleware_video  middleware_common
endif
	if [ -d $(PRJ_DIR)/middleware/rate_ctl/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/rate_ctl/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/rate_ctl/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/rate_ctl/rootfs/* $(RESCUE_FS_DIR); \
	fi
endif
	if [ -d $(PRJ_DIR)/middleware/rate_ctl/middleware ]; then \
		cp -av $(PRJ_DIR)/middleware/rate_ctl/middleware/* $(MIDDLEWARE_INS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
middleware_rate_ctl-clean:
else
middleware_rate_ctl-clean: middleware_video-clean middleware_common-clean 
endif

middleware_nvram:
	if [ -d $(PRJ_DIR)/middleware/nvram/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/nvram/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/nvram/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/nvram/rootfs/* $(RESCUE_FS_DIR); \
	fi
endif
	if [ -d $(PRJ_DIR)/middleware/nvram/middleware ]; then \
		cp -av $(PRJ_DIR)/middleware/nvram/middleware/* $(MIDDLEWARE_INS_DIR); \
	fi
middleware_nvram-clean:

middleware_gpio:
	if [ -d $(PRJ_DIR)/middleware/gpio/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/gpio/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/gpio/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/gpio/rootfs/* $(RESCUE_FS_DIR); \
	fi
endif
	if [ -d $(PRJ_DIR)/middleware/gpio/middleware ]; then \
		cp -av $(PRJ_DIR)/middleware/gpio/middleware/* $(MIDDLEWARE_INS_DIR); \
	fi
middleware_gpio-clean:

middleware_zbar-0.10:
	if [ -d $(PRJ_DIR)/middleware/zbar-0.10/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/zbar-0.10/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/zbar-0.10/rootfs ]; then \
		cp -av $(PRJ_DIR)/middleware/zbar-0.10/rootfs/* $(RESCUE_FS_DIR); \
	fi
endif
	if [ -d $(PRJ_DIR)/middleware/zbar-0.10/middleware ]; then \
		cp -av $(PRJ_DIR)/middleware/zbar-0.10/middleware/* $(MIDDLEWARE_INS_DIR); \
	fi
middleware_zbar-0.10-clean:

boa-0.94.14rc17:
	if [ -d $(PRJ_DIR)/app/boa-0.94.14rc17/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/boa-0.94.14rc17/rootfs/* $(FS_DIR); \
	fi
boa-0.94.14rc17-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ez-ipupdate-3.0.10:
	if [ -d $(PRJ_DIR)/app/ez-ipupdate-3.0.10/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/ez-ipupdate-3.0.10/rootfs/* $(FS_DIR); \
	fi
ez-ipupdate-3.0.10-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ifeq ($(MODULE_ONLY), yes)
galaxy-server:
else
galaxy-server: middleware_audio  middleware_video  middleware_rate_ctl
endif
	if [ -d $(PRJ_DIR)/app/galaxy-server/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/galaxy-server/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
galaxy-server-clean:
else
galaxy-server-clean: middleware_audio-clean middleware_video-clean middleware_rate_ctl-clean 
endif
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

curl-7.36.0:
	if [ -d $(PRJ_DIR)/app/curl-7.36.0/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/curl-7.36.0/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/app/curl-7.36.0/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/app/curl-7.36.0/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
curl-7.36.0-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ifeq ($(MODULE_ONLY), yes)
ez-setup:
else
ez-setup: middleware_nvram  middleware_video  middleware_audio  middleware_rate_ctl  middleware_zbar-0.10
endif
	$(MAKE) -C $(PRJ_DIR)/app/ez-setup all COMPILE_RESCUE=no
	$(MAKE) -C $(PRJ_DIR)/app/ez-setup install INSTALL_DIR=$(PRJ_DIR)/app/ez-setup/rootfs COMPILE_RESCUE=no
	if [ -d $(PRJ_DIR)/app/ez-setup/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/ez-setup/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	$(MAKE) -C $(PRJ_DIR)/app/ez-setup install INSTALL_DIR=$(PRJ_DIR)/app/ez-setup/rootfs-rescue COMPILE_RESCUE=yes
	if [ -d $(PRJ_DIR)/app/ez-setup/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/app/ez-setup/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
ifeq ($(MODULE_ONLY), yes)
ez-setup-clean:
else
ez-setup-clean: middleware_nvram-clean middleware_video-clean middleware_audio-clean middleware_rate_ctl-clean middleware_zbar-0.10-clean 
endif
	$(MAKE) -C $(PRJ_DIR)/app/ez-setup clean
	$(MAKE) -C $(PRJ_DIR)/app/ez-setup distclean
	rm -rf $(PRJ_DIR)/app/ez-setup/rootfs
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	rm -rf $(PRJ_DIR)/app/ez-setup/rootfs-rescue
endif

iperf-2.0.4:
	if [ -d $(PRJ_DIR)/app/iperf-2.0.4/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/iperf-2.0.4/rootfs/* $(FS_DIR); \
	fi
iperf-2.0.4-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

iptables-1.4.1:
	if [ -d $(PRJ_DIR)/app/iptables-1.4.1/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/iptables-1.4.1/rootfs/* $(FS_DIR); \
	fi
iptables-1.4.1-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

libsonix:
	if [ -d $(PRJ_DIR)/app/libsonix/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/libsonix/rootfs/* $(FS_DIR); \
	fi
libsonix-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

mDNSResponder-333.10:
	if [ -d $(PRJ_DIR)/app/mDNSResponder-333.10/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/mDNSResponder-333.10/rootfs/* $(FS_DIR); \
	fi
mDNSResponder-333.10-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ifeq ($(MODULE_ONLY), yes)
miniupnpc-20071003:
else
miniupnpc-20071003: iptables-1.4.1
endif
	if [ -d $(PRJ_DIR)/app/miniupnpc-20071003/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/miniupnpc-20071003/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
miniupnpc-20071003-clean:
else
miniupnpc-20071003-clean: iptables-1.4.1-clean
endif
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ifeq ($(MODULE_ONLY), yes)
miniupnpd-20090605:
else
miniupnpd-20090605: iptables-1.4.1
endif
	if [ -d $(PRJ_DIR)/app/miniupnpd-20090605/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/miniupnpd-20090605/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
miniupnpd-20090605-clean:
else
miniupnpd-20090605-clean: iptables-1.4.1-clean
endif
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

net-snmp-5.7.1:
	if [ -d $(PRJ_DIR)/app/net-snmp-5.7.1/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/net-snmp-5.7.1/rootfs/* $(FS_DIR); \
	fi
net-snmp-5.7.1-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ntp-4.2.6p5:
	if [ -d $(PRJ_DIR)/app/ntp-4.2.6p5/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/ntp-4.2.6p5/rootfs/* $(FS_DIR); \
	fi
ntp-4.2.6p5-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ppp-2.4.1:
	if [ -d $(PRJ_DIR)/app/ppp-2.4.1/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/ppp-2.4.1/rootfs/* $(FS_DIR); \
	fi
ppp-2.4.1-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

rp-pppoe-3.8:
	if [ -d $(PRJ_DIR)/app/rp-pppoe-3.8/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/rp-pppoe-3.8/rootfs/* $(FS_DIR); \
	fi
rp-pppoe-3.8-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

samba-2.2.7a:
	if [ -d $(PRJ_DIR)/app/samba-2.2.7a/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/samba-2.2.7a/rootfs/* $(FS_DIR); \
	fi
samba-2.2.7a-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

sensor2tv:
	if [ -d $(PRJ_DIR)/app/sensor2tv/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/sensor2tv/rootfs/* $(FS_DIR); \
	fi
sensor2tv-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

tsocks-1.8:
	if [ -d $(PRJ_DIR)/app/tsocks-1.8/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/tsocks-1.8/rootfs/* $(FS_DIR); \
	fi
tsocks-1.8-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ifeq ($(MODULE_ONLY), yes)
two-way-audio:
else
two-way-audio: middleware_snxconf
endif
	if [ -d $(PRJ_DIR)/app/two-way-audio/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/two-way-audio/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
two-way-audio-clean:
else
two-way-audio-clean: middleware_snxconf-clean
endif
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ifeq ($(MODULE_ONLY), yes)
web-admin:
else
web-admin: libsonix middleware_audio  middleware_video  middleware_snxconf
endif
	if [ -d $(PRJ_DIR)/app/web-admin/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/web-admin/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
web-admin-clean:
else
web-admin-clean: libsonix-clean middleware_audio-clean middleware_video-clean middleware_snxconf-clean 
endif
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

wireless_tools.29:
	if [ -d $(PRJ_DIR)/app/wireless_tools.29/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/wireless_tools.29/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/app/wireless_tools.29/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/app/wireless_tools.29/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
wireless_tools.29-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

wpa_supplicant-0.7.3:
	if [ -d $(PRJ_DIR)/app/wpa_supplicant-0.7.3/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/wpa_supplicant-0.7.3/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/app/wpa_supplicant-0.7.3/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/app/wpa_supplicant-0.7.3/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
wpa_supplicant-0.7.3-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

smtpc-1.0.0:
	if [ -d $(PRJ_DIR)/app/smtpc-1.0.0/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/smtpc-1.0.0/rootfs/* $(FS_DIR); \
	fi
smtpc-1.0.0-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ifeq ($(MODULE_ONLY), yes)
onvif:
else
onvif: galaxy-server
endif
	if [ -d $(PRJ_DIR)/app/onvif/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/onvif/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
onvif-clean:
else
onvif-clean: galaxy-server-clean
endif
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ifeq ($(MODULE_ONLY), yes)
isp-tuning-tool:
else
isp-tuning-tool: middleware_video
endif
	if [ -d $(PRJ_DIR)/app/isp-tuning-tool/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/isp-tuning-tool/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
isp-tuning-tool-clean:
else
isp-tuning-tool-clean: middleware_video-clean
endif
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

hostapd-0.8:
	if [ -d $(PRJ_DIR)/app/hostapd-0.8/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/hostapd-0.8/rootfs/* $(FS_DIR); \
	fi
hostapd-0.8-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

mcu_ctrl:
	if [ -d $(PRJ_DIR)/app/mcu_ctrl/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/mcu_ctrl/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/app/mcu_ctrl/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/app/mcu_ctrl/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
mcu_ctrl-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

fwupdate:
	if [ -d $(PRJ_DIR)/app/fwupdate/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/fwupdate/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/app/fwupdate/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/app/fwupdate/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
fwupdate-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

motion_detect:
	if [ -d $(PRJ_DIR)/app/motion_detect/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/motion_detect/rootfs/* $(FS_DIR); \
	fi
motion_detect-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

libsec:
	if [ -d $(PRJ_DIR)/app/libsec/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/libsec/rootfs/* $(FS_DIR); \
	fi
libsec-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ifeq ($(MODULE_ONLY), yes)
stream:
else
stream: libsec
endif
	if [ -d $(PRJ_DIR)/app/stream/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/stream/rootfs/* $(FS_DIR); \
	fi
ifeq ($(MODULE_ONLY), yes)
stream-clean:
else
stream-clean: libsec-clean
endif
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

libflash:
	if [ -d $(PRJ_DIR)/app/libflash/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/libflash/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/app/libflash/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/app/libflash/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
libflash-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

ipcam_daemon:
	if [ -d $(PRJ_DIR)/app/ipcam_daemon/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/ipcam_daemon/rootfs/* $(FS_DIR); \
	fi
ipcam_daemon-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

litedm_cli:
	if [ -d $(PRJ_DIR)/app/litedm_cli/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/litedm_cli/rootfs/* $(FS_DIR); \
	fi
litedm_cli-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

led_control:
	if [ -d $(PRJ_DIR)/app/led_control/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/led_control/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/app/led_control/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/app/led_control/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
led_control-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

qiwo_dl_fw:
	if [ -d $(PRJ_DIR)/app/qiwo_dl_fw/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/qiwo_dl_fw/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/app/qiwo_dl_fw/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/app/qiwo_dl_fw/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
qiwo_dl_fw-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

timeout:
	if [ -d $(PRJ_DIR)/app/timeout/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/timeout/rootfs/* $(FS_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/app/timeout/rootfs-rescue ]; then \
		cp -av $(PRJ_DIR)/app/timeout/rootfs-rescue/* $(RESCUE_FS_DIR); \
	fi
endif
timeout-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

recorder:
	if [ -d $(PRJ_DIR)/app/recorder/rootfs ]; then \
		cp -av $(PRJ_DIR)/app/recorder/rootfs/* $(FS_DIR); \
	fi
recorder-clean:
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif

snx_modules :=crosstool-4.5.2 image-tool board-info u-boot-2011-09 linux-2.6.35.12 busybox-1.18.5 rootfs rootfs-rescue ahbdma audio bus-mon spi crypto gpio pwm rtc timer tv usb-wifi usb-storage usb-3g video wdt sdc nvram_driver mcu_module example middleware_common middleware_audio middleware_video middleware_snxconf middleware_rate_ctl middleware_nvram middleware_gpio middleware_zbar-0.10 boa-0.94.14rc17 ez-ipupdate-3.0.10 galaxy-server curl-7.36.0 ez-setup iperf-2.0.4 iptables-1.4.1 libsonix mDNSResponder-333.10 miniupnpc-20071003 miniupnpd-20090605 net-snmp-5.7.1 ntp-4.2.6p5 ppp-2.4.1 rp-pppoe-3.8 samba-2.2.7a sensor2tv tsocks-1.8 two-way-audio web-admin wireless_tools.29 wpa_supplicant-0.7.3 smtpc-1.0.0 onvif isp-tuning-tool hostapd-0.8 mcu_ctrl fwupdate motion_detect libsec stream libflash ipcam_daemon litedm_cli led_control qiwo_dl_fw timeout recorder

